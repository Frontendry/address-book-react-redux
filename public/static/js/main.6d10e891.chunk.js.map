{"version":3,"sources":["constants/index.js","reducers/contactsReducer.js","reducers/index.js","store/index.js","components/contacts/Contacts.js","components/contacts/ContactsContainer.js","components/contacts/singleContact.js","middleware/index.js","actions/index.js","components/contacts/contactForm.js","components/filter/Filter.js","components/filter/FilterContainer.js","App.js","index.js"],"names":["GET_CONTACTS","GET_CONTACTS_SUCCESS","GET_CONTACTS_FAILURE","GET_CONTACT","GET_CONTACT_SUCCESS","GET_CONTACT_FAILURE","UPDATED_CONTACT_SUCCESS","SORT_BY_ALPHABET","REST_API_URL","initialState","contactList","contact","loading","hasErrors","contactsReducer","state","action","type","payload","sortedAlphabetArr","order","sortByAlphabetState","Object","assign","sort","a","b","name","localeCompare","rootReducer","combineReducers","contacts","store","createStore","composeWithDevTools","applyMiddleware","thunk","Contacts","props","contactsData","className","map","id","to","connect","singleContact","this","match","params","fetchContact","email","phone","style","width","height","fontSize","Component","dispatch","ownProps","fetch","response","json","data","existingContactList","editContactDispatch","edits","method","body","JSON","stringify","headers","console","log","editContact","contactDetails","filter","parseInt","useState","setName","setEmail","setPhone","useEffect","onSubmit","event","preventDefault","htmlFor","defaultValue","onChange","e","target","value","Filter","sortByAlphabet","endsWith","sortByInput","disabled","App","fetchContacts","FilterContainer","exact","path","component","ContactsContainer","contactForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d10e891.chunk.js","sourcesContent":["export const GET_CONTACTS = \"GET_CONTACTS\";\r\nexport const GET_CONTACTS_SUCCESS = \"GET_CONTACTS_SUCCESS\";\r\nexport const GET_CONTACTS_FAILURE = \"GET_CONTACTS_FAILURE\";\r\nexport const GET_CONTACT = \"GET_CONTACT\";\r\nexport const GET_CONTACT_SUCCESS = \"GET_CONTACT_SUCCESS\";\r\nexport const GET_CONTACT_FAILURE = \"GET_CONTACT_FAILURE\";\r\nexport const UPDATED_CONTACT_SUCCESS = \"UPDATED_CONTACT_SUCCESS\";\r\nexport const UPDATED_CONTACT_FAILURE = \"UPDATED_CONTACT_FAILURE\";\r\nexport const SORT_BY_ALPHABET = \"SORT_BY_ALPHABET\";\r\nexport const REST_API_URL = \"https://jsonplaceholder.typicode.com/users\";\r\n","import {\r\n  GET_CONTACTS,\r\n  GET_CONTACTS_SUCCESS,\r\n  GET_CONTACTS_FAILURE,\r\n  GET_CONTACT,\r\n  GET_CONTACT_SUCCESS,\r\n  GET_CONTACT_FAILURE,\r\n  UPDATED_CONTACT_SUCCESS,\r\n  SORT_BY_ALPHABET,\r\n} from \"../constants\";\r\n\r\nconst initialState = {\r\n  contactList: [],\r\n  contact: {},\r\n  loading: false,\r\n  hasErrors: false,\r\n};\r\n\r\nconst contactsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    /* return Object.assign({}, state, {\r\n        loading: true,\r\n      }); */\r\n\r\n    case GET_CONTACTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        contactList: action.payload,\r\n        loading: true,\r\n        hasErrors: false,\r\n      };\r\n    /*  return Object.assign({}, state, {\r\n        contactList: action.payload,\r\n        loading: true,\r\n        hasErrors: false,\r\n      });\r\n */\r\n    case GET_CONTACTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        hasErrors: true,\r\n      };\r\n    /*  return Object.assign({}, state, {\r\n        loading: false,\r\n        hasErrors: true,\r\n      }); */\r\n\r\n    case GET_CONTACT:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    /*  return Object.assign({}, state, {\r\n        loading: true,\r\n      }); */\r\n\r\n    case GET_CONTACT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        contact: action.payload,\r\n        loading: true,\r\n        hasErrors: false,\r\n      };\r\n    /*  return Object.assign({}, state, {\r\n        contact: action.payload,\r\n        loading: true,\r\n        hasErrors: false,\r\n      }); */\r\n\r\n    case GET_CONTACT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        hasErrors: true,\r\n      };\r\n    /*  return Object.assign({}, state, {\r\n        loading: false,\r\n        hasErrors: true,\r\n      }); */\r\n\r\n    case UPDATED_CONTACT_SUCCESS:\r\n      // Make sure to update the changed field\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        hasErrors: false,\r\n      };\r\n\r\n    /*  return Object.assign({}, state, {\r\n        loading: false,\r\n        hasErrors: false,\r\n      }); */\r\n\r\n    case SORT_BY_ALPHABET:\r\n      const { order } = action.payload;\r\n\r\n      const sortByAlphabetState = Object.assign({}, state);\r\n\r\n      let sortedAlphabetArr;\r\n\r\n      if (order === \"asc\") {\r\n        sortedAlphabetArr = state.contactList.sort((a, b) =>\r\n          a.name.localeCompare(b.name)\r\n        );\r\n      } else {\r\n        sortedAlphabetArr = state.contactList.sort((a, b) =>\r\n          b.name.localeCompare(a.name)\r\n        );\r\n      }\r\n\r\n      sortByAlphabetState.contactList = sortedAlphabetArr;\r\n\r\n      return sortByAlphabetState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contactsReducer;\r\n","// External Imports\r\nimport { combineReducers } from \"redux\";\r\n\r\n// Internal Imports\r\nimport contactsReducer from \"./contactsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","// External Imports\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// Internal Imports\r\nimport rootReducer from \"../reducers/index\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Contacts = (props) => {\r\n  let contactsData = props.state.contacts.contactList;\r\n  return (\r\n    <Fragment>\r\n      <section className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"card\">\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-uppercase\">Name</th>\r\n                  <th className=\"text-uppercase\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {contactsData.map((contact) => {\r\n                  const { name } = contact;\r\n                  const { id } = contact;\r\n\r\n                  return (\r\n                    <tr key={id}>\r\n                      <td className=\"align-middle p-4\">\r\n                        <Link to={`contacts/${id}`}>{name}</Link>\r\n                      </td>\r\n\r\n                      <td className=\"align-middle p-4\">\r\n                        <Link\r\n                          className=\"btn btn-sm btn-primary mr-2\"\r\n                          to={`contacts/${id}`}\r\n                        >\r\n                          View\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","// External Imports\r\nimport { connect } from \"react-redux\";\r\n\r\n// Internal Imports\r\nimport Contacts from \"./Contacts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Contacts);\r\n","// External Import\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Internal Import\r\nimport { fetchContact } from \"../../middleware\";\r\n\r\nclass singleContact extends Component {\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n\r\n    this.props.fetchContact(id);\r\n  }\r\n\r\n  render() {\r\n    let { name, email, phone } = this.props.contact;\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-5 mx-auto\">\r\n            <div className=\"card border-0 shadow-sm\">\r\n              <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item \">\r\n                  <div className=\"media align-items-center\">\r\n                    <span\r\n                      className=\"d-flex align-items-center justify-content-center border border-gray rounded-circle mr-3 \"\r\n                      style={{\r\n                        width: \"60px\",\r\n                        height: \"60px\",\r\n                        fontSize: \"1.5rem\",\r\n                      }}\r\n                    >\r\n                      <i className=\"bi bi-person d-flex\"></i>\r\n                    </span>\r\n\r\n                    <div className=\"media-body\">{name}</div>\r\n                  </div>\r\n                </li>\r\n\r\n                <li className=\"list-group-item \">\r\n                  <div className=\"media align-items-center\">\r\n                    <span\r\n                      className=\"d-flex align-items-center justify-content-center border border-gray rounded-circle mr-3\"\r\n                      style={{\r\n                        width: \"60px\",\r\n                        height: \"60px\",\r\n                        fontSize: \"1.5rem\",\r\n                      }}\r\n                    >\r\n                      <i className=\"bi bi-envelope d-flex\"></i>\r\n                    </span>\r\n\r\n                    <div className=\"media-body\">{email}</div>\r\n                  </div>\r\n                </li>\r\n\r\n                <li className=\"list-group-item \">\r\n                  <div className=\"media align-items-center\">\r\n                    <span\r\n                      className=\"d-flex align-items-center justify-content-center border border-gray rounded-circle mr-3\"\r\n                      style={{\r\n                        width: \"60px\",\r\n                        height: \"60px\",\r\n                        fontSize: \"1.5rem\",\r\n                      }}\r\n                    >\r\n                      <i className=\"bi bi-phone d-flex\"></i>\r\n                    </span>\r\n\r\n                    <div className=\"media-body\">{phone}</div>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row mt-4\">\r\n          <div className=\"col-5 mx-auto\">\r\n            <Link to=\"/contacts\" className=\"btn btn-primary\">\r\n              Back to contacts\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contact: state.contacts.contact,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  fetchContact: () => dispatch(fetchContact(ownProps.match.params.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(singleContact);\r\n","// Internal Imports\r\nimport { REST_API_URL } from \"../constants/index\";\r\nimport {\r\n  getContacts,\r\n  getContactsSuccess,\r\n  getContactsFailure,\r\n  getContact,\r\n  getContactSuccess,\r\n  getContactFailure,\r\n  updatedContactSuccess,\r\n} from \"../actions\";\r\n\r\nexport const fetchContacts = () => {\r\n  return async (dispatch) => {\r\n    dispatch(getContacts());\r\n\r\n    try {\r\n      const response = await fetch(REST_API_URL);\r\n      const data = await response.json();\r\n\r\n      dispatch(getContactsSuccess(data));\r\n    } catch (error) {\r\n      dispatch(getContactsFailure());\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchContact = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch(getContact());\r\n\r\n    try {\r\n      const response = await fetch(`${REST_API_URL}/${id}`);\r\n      const data = await response.json();\r\n\r\n      dispatch(getContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(getContactFailure());\r\n    }\r\n  };\r\n};\r\n\r\nexport const editContact = (id, edits) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch(`${REST_API_URL}/${id}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(edits),\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      dispatch(updatedContactSuccess(data));\r\n      console.log(data);\r\n    } catch (error) {}\r\n  };\r\n};\r\n","import {\r\n  GET_CONTACTS,\r\n  GET_CONTACTS_SUCCESS,\r\n  GET_CONTACTS_FAILURE,\r\n  GET_CONTACT,\r\n  GET_CONTACT_SUCCESS,\r\n  GET_CONTACT_FAILURE,\r\n  UPDATED_CONTACT_SUCCESS,\r\n  UPDATED_CONTACT_FAILURE,\r\n  SORT_BY_ALPHABET,\r\n} from \"../constants/index\";\r\n\r\n// Create Redux action creators that return an action\r\nexport const getContacts = () => ({\r\n  type: GET_CONTACTS,\r\n});\r\n\r\nexport const getContactsSuccess = (contacts) => ({\r\n  type: GET_CONTACTS_SUCCESS,\r\n  payload: contacts,\r\n});\r\n\r\nexport const getContactsFailure = () => ({\r\n  type: GET_CONTACTS_FAILURE,\r\n});\r\n\r\nexport const getContact = () => ({\r\n  type: GET_CONTACT,\r\n});\r\n\r\nexport const getContactSuccess = (contact) => ({\r\n  type: GET_CONTACT_SUCCESS,\r\n  payload: contact,\r\n});\r\n\r\nexport const getContactFailure = () => ({\r\n  type: GET_CONTACT_FAILURE,\r\n});\r\n\r\nexport const updatedContactSuccess = (updatedContact) => ({\r\n  type: UPDATED_CONTACT_SUCCESS,\r\n  payload: updatedContact,\r\n});\r\n\r\nexport const updatedContactFailure = (updatedContact) => ({\r\n  type: UPDATED_CONTACT_FAILURE,\r\n});\r\n\r\nexport const sortByAlphabet = (data) => ({\r\n  type: SORT_BY_ALPHABET,\r\n  payload: data,\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { editContact } from \"../../middleware/\";\r\n\r\nconst ContactForm = ({\r\n  match: {\r\n    params: { id },\r\n  },\r\n  existingContactList,\r\n  editContactDispatch,\r\n}) => {\r\n  const getContactDetails = existingContactList.filter((singleContact) => {\r\n    return singleContact.id === parseInt(id);\r\n  });\r\n\r\n  const contactDetails = getContactDetails[0];\r\n\r\n  let [name, setName] = useState(\"\");\r\n  let [email, setEmail] = useState(\"\");\r\n  let [phone, setPhone] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (contactDetails) {\r\n      setName(contactDetails.name);\r\n      setEmail(contactDetails.email);\r\n      setPhone(contactDetails.phone);\r\n    }\r\n  }, [contactDetails]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const contactData = {\r\n      name: { name },\r\n      email: { email },\r\n      phone: { phone },\r\n    };\r\n\r\n    editContactDispatch(id, contactData);\r\n  };\r\n\r\n  const nameHandleChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const emailHandleChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const phoneHandleChange = (e) => {\r\n    setPhone(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"fullName\">Full Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  className=\"form-control\"\r\n                  defaultValue={name}\r\n                  onChange={nameHandleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"email\"\r\n                  className=\"form-control\"\r\n                  defaultValue={email}\r\n                  onChange={emailHandleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"phone\">Phone</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"phone\"\r\n                  className=\"form-control\"\r\n                  defaultValue={phone}\r\n                  onChange={phoneHandleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"d-flex align-items-center mt-4\">\r\n                <button type=\"submit\" className=\"btn btn-primary mr-3\">\r\n                  Save\r\n                </button>\r\n                <button className=\"btn btn-danger\">Cancel</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  existingContactList: state.contacts.contactList,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  editContactDispatch: (id, edits) => dispatch(editContact(id, edits)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ sortByAlphabet }) => {\r\n  const sortByInput = (e) => {\r\n    let value = e.target.value;\r\n    let order = value.endsWith(\"asc\") ? \"asc\" : \"desc\";\r\n\r\n    sortByAlphabet({ order });\r\n  };\r\n  return (\r\n    <div className=\"form-row\">\r\n      <div className=\"col\">\r\n        <select\r\n          className=\"custom-select\"\r\n          onChange={(e) => {\r\n            sortByInput(e);\r\n          }}\r\n          defaultValue={\"DEFAULT\"}\r\n        >\r\n          <option value=\"DEFAULT\" disabled>\r\n            Sort by First Name\r\n          </option>\r\n\r\n          <option value=\"alphabet_asc\">A-Z</option>\r\n          <option value=\"alphabet_desc\">Z-A</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","// External Imports\r\nimport { connect } from \"react-redux\";\r\n\r\n// Internal Imports\r\nimport { sortByAlphabet } from \"../../actions\";\r\nimport Filter from \"./Filter\";\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  sortByAlphabet: (data) => dispatch(sortByAlphabet(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","// External imports\nimport React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n// Internal imports\nimport { fetchContacts } from \"./middleware\";\nimport ContactsContainer from \"./components/contacts/ContactsContainer\";\nimport singleContact from \"./components/contacts/singleContact\";\nimport contactForm from \"./components/contacts/contactForm\";\nimport FilterContainer from \"./components/filter/FilterContainer\";\n\n// Assets\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      /* <Fragment>\n        <div className=\"container\">\n          <FilterContainer />\n          <ContactsContainer />\n        </div>\n      </Fragment> */\n\n      <Router>\n        <div className=\"container\">\n          <FilterContainer />\n          <Switch>\n            <Route exact path=\"/\" component={ContactsContainer} />\n            <Route exact path=\"/contacts\" component={ContactsContainer} />\n            <Route exact path=\"/contacts/:id\" component={singleContact} />\n            <Route exact path=\"/add-edit-contact/:id\" component={contactForm} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","// External Imports\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\n// Internal Imports\nimport store from \"./store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}